Артефакт: fat jar-файл.

Валюты: Евро, Доллар США, Турецкая лира, Болгарский лев, Армянский драм

Данные: Исторические данные с начала 2005 года разбитые по дням. Формат CSV, разделитель-';'
		Пример:
		nominal;data;curs;cdx
1;05.03.2022;"105,8124";Доллар США

Данные доступны по ссылке:
https://www.cbr.ru/currency_base/dynamics/

(!) Если в файлах есть пропуски дней, то считать, что курс не менялся.

Интерфейс - команды телеграмм бота(Первая ссылка из гугла):
Курс валюты на завтра по определенному алгоритму
		"rate TRY -date tomorrow -alg mist" Вт 22.02.2022 - 6,11;

Курс на конкретную дату в будущем по определенному алгоритму
		"rate TRY -date 22.02.2030 -alg mist" Вт 22.02.2030 - 7,61;
Курс валюты на период недели или месяца по определенному алгоритму с выводом в список
		"rate USD -period week -alg mist -output list"
			Вт 22.02.2022 - 75,45
			Ср 23.02.2022 - 76,12
			Чт 24.02.2022 - 77,34
			Пт 25.02.2022 - 78,23
			Сб 26.02.2022 - 80,11
			Вс 27.02.2022 - 82,10
			Пн 28.02.2022 - 90,45
Курс одной или нескольких валют (до 5) на период недели или месяца по определенному алгоритму с выводом как картинка-график
		"rate USD,TRY -period month -alg moon -output graph"
			*Представьте здесь картинку, где по горизонтали числа 1-7 или 1-30 в зависимости от периода, а по вертикали курсы валют разными цветами*

Если, есть проблемы в входных данных, не хватает параметров, то нужно бросить понятную ошибку.

	P.S.: Предполагаю, что кому-то захочется изучить телегу плотнее и сделать команды и кнопки. Не отговариваю, но задачу можно сдать и просто с текстовым интерфейсом. На ваше усмотрение.

Библиотека построения графиков:
	Ссылка на github



Алгоритмы прогнозирования:
Алгоритм “Старый”.
Алгоритм из предыдущего ДЗ.
Алгоритм “Прошлогодний”.
Берёте курс за эту дату за прошлый год и показываете. Если на дату нет курса, то за предыдущий день.

Алгоритм “Мистический”
для каждого следующего дня берёте рандомно одно значение предыдущих лет за этот календарный день.


Алгоритм “из интернета” берём ссылка на алгоритм линейной регрессии экстраполируем по данным последнего месяца.




Тестирование: Всё что является вашей логикой, нужно покрыть юнит-тестами с моками, где это уместно.

Логирование: На уровне INFO бизнес операции. На уровне DEBUG, то что относится к разработке. Логирование в файл, который ротируется каждый день. Не больше 7 файлов должно копиться. (т.е. за последнюю неделю)

Срок: Смотрите в расписании дедлайнов.

Как проверяем: Выполняете, кидаете ссылку на ТГ-бота и ссылку на репозиторий. Ревьюер пишет вам и просит включить бота. Проверяет, что по бизнесу всё работает верно.
Дальше либо текстовые замечания в PR\телеге. Может назначается созвон с код ревью в зуме. Может видео-разбор. Всё зависит от ревьюера.

Чеклист проверки кода: Чеклист проверки ДЗ